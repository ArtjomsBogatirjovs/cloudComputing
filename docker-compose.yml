version: '3'

services:
  app-car:
    build: .
    ports:
      - "3000:3000"
    depends_on:
#      minio:
#        condition: service_healthy
      rabbitmq:
          condition: service_healthy
#      mongo:
#          condition: service_healthy
    environment:
      MINIO_ENDPOINT: "minio:9000"
      MINIO_ROOT_USER: "minioadmin"
      MINIO_ROOT_PASSWORD: "minioadmin"
      RABBITMQ_HOST: "rabbitmq"
      RABBITMQ_QUEUE: "QUEUE-NAME"
      MONGO_URI: "mongodb://mongo:27017/your-database-name"

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: "minioadmin"
      MINIO_ROOT_PASSWORD: "minioadmin"
    command: server /data --console-address ":9001"
#    healthcheck:
#      test: ["CMD", "curl", "--fail", "http://localhost:9000/minio/health/live"]
#      interval: 10s
#      timeout: 5s
#      retries: 3

  rabbitmq:
    image: "rabbitmq:management"
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  mongo:
    image: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: "ab"
      MONGO_INITDB_ROOT_PASSWORD: "ab"
#    healthcheck:
#      test:
#        [
#          "CMD",
#          "mongo",
#          "--quiet",
#          "127.0.0.1/test",
#          "--eval",
#          "'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'",
#        ]
#      interval: 10s
#      timeout: 5s
#      retries: 3